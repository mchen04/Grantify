version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: grantify-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      # Supabase configuration (use environment variables or .env file)
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      # Google AI configuration
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      # Logging
      - LOG_LEVEL=info
    volumes:
      - backend_logs:/app/logs
    networks:
      - grantify-network

  # Frontend Next.js service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: grantify-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:3001/api
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_GOOGLE_ADSENSE_ID=${NEXT_PUBLIC_GOOGLE_ADSENSE_ID}
    networks:
      - grantify-network

  # Nginx reverse proxy (optional but recommended for production)
  nginx:
    image: nginx:alpine
    container_name: grantify-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - grantify-network

volumes:
  backend_logs:

networks:
  grantify-network:
    driver: bridge